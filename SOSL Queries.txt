SOSL Queries:
=============
	SOSL  ----> Salesforce Object Search Language.
	
	By using SOSL Queries, we can search for a particular content in all the fields inside the multiple objects.
	
	i.e. It will search for the specified content in all the fields inside the object. If any of the record contains the specified search content, then it will return the record automatically.
	
	SOSL Queries should be always prepared by using "FIND Statement".
	
Syntax:
	FIND '<searchText>*' IN ALL FIELDS RETURNING
		<ObjectName1>(<field1>,<field2>,<field3>,....,<fieldN>),
		<ObjectName2>(<field1>,<field2>,<field3>,....,<fieldN>),
		....
		....
		<ObjectName20>(<field1>,<field2>,<field3>,....,<fieldN>)
		
Governor Limits:
	1. We can use max. of 20 SOSL Queries within a Single Transaction.	
	2. By using Each SOSL Query, we can search for the content in max. of 20
		Objects.	
	3. We can't perform any DML Operations on the records returned by SOSL Query.
	4. Each SOSL Query can return max. of 2,000 records.
		
Note: While searching for the content through SOSL, we can specify the below
		search groups. 
		
			1. IN ALL FIELDS.
			2. IN EMAIL FIELDS.
			3. IN TEXT FIELDS.
			4. IN PHONE FIELDS.

Ways to invoke the SOSL Queries:
--------------------------------
	We can invoke the SOSL Queries by using the below 2 ways.
		
		1. By using "Query Editor" from "Developer Console".
		2. By using "Apex Programming".

UseCase:
========
	Write an SOSL Query, to Search for the keyword "test" in all the fields of "Account, Contact, Lead, Case, and Hiring Manager" objects, and return the records.
	
		FIND {test*} IN ALL FIELDS RETURNING
			Account(ID, Name, Rating, industry, annualrevenue, phone, fax, active__C Limit 10),
			Contact(ID, FirstName, lastName, Email, phone, fax, title),
			Lead(ID, FirstName, LastName, Company, Status, Email, City Limit 25),
			Case(ID, CaseNumber, Status, Priority, Origin, Reason, Subject),
			Hiring_Manager__C(ID, Name, Location__C, Designation__C, Email_Address__C Limit 25)

Note: We can execute the SOSL Queries by using "Apex Programming" also. Apex divides the
		SOSL Queries into 2 types.
		
		1. Static SOSL Queries.
		2. Dynamic SOSL Queries.
		
Static SOSL Queries:
--------------------
	In this approach the search content inside the SOSL Query should be always fixed. i.e. upon preparing the SOSL Query, we have to specify the Search content, it can't be Dynamic.
	
	Static SOSL Queries should be always enclosed with "Square Braces".
	Syntax:
		[ SOSL Query ]
		
	Static SOSL Queries will always executed Automatically by default. And will return the result in the form of "List<List<SObject>>".
	
	Ex:
		List<List<SObject>> <referenceName> = [ SOSL Query ];
		
Dynamic SOSL Queries:
---------------------
	In this approach, we can make the Search Content, Search Group, and Objects dynamic.
	i.e. At runtime, we can supply the Search Text, Search Group and Objects to be get Searched.
	
	Dynamic SOSL Query should be always stored in the form of a "String" variable.
	
	Syntax:
		String <variableName> = 'SOSL Query';
		
	We have to invoke the Dynamic SOSL Query manually by using "Search.Query()" method. Which always returns the result in the form of "List<List<SObject>>".
	
	Ex:
		List<List<SObject>> <referenceName> = Search.Query(<SOSL Query>);
		
Note:
	To search for the content inside the Object Records, we have to make sure the Object should enable the "Allow Search" Checkbox in Object Settings.
	
UseCase:
========
	Write an apex program, to Search for the Specified Content in Multiple Objects at a time, and represent the results on the Log File.
	
Class Code:
-----------
public class GlobalSearchUtility 
{
	Public static void SearchRecords()
    {
        List<List<SObject>>  lstRecords = [FIND 'test*' IN ALL FIELDS RETURNING
                                         		Account(Id, Name, Rating, Industry, Annualrevenue, CustomerPriority__C, active__C),
                                         		Contact(ID, FirstName, LastName, Email, title, Phone, mailingCity),
                                         		Lead(ID, FirstName, LastName, Company, Title, Status, Phone, Email, Fax),
                                         		Case(ID, CaseNumber, Status, Priority, Origin, reason, Subject),
                                         		Hiring_Manager__C(Id, Name, Location__C, Contact_Number__C, designation__C)];
        
		List<Account> lstAccounts = (List<Account>) lstRecords.Get(0);
        List<Contact> lstContacts = (List<Contact>) lstRecords.Get(1);
        List<Lead> lstLeads = (List<Lead>) lstRecords.Get(2);
        List<Case> lstCases = (List<Case>) lstRecords[3];
        List<Hiring_Manager__c> lstHRRecords = (List<Hiring_Manager__C>) lstRecords[4];
        
        System.debug('Number of Account Records....: '+ lstAccounts.Size());
        	for(Account accRecord : lstAccounts)
            {
                System.debug('Account Record.....: '+ accRecord);
            }
        
        System.debug('----------------------------------------');
        System.debug('Number of Contact Records.....: '+ lstContacts.Size());
        	for(Contact con : lstContacts)
            {
                System.debug('Contact Record.....: '+ con);
            }
        
        System.debug('-----------------------------------------');
        System.debug('Number of Lead Records........: '+ lstLeads.Size());
        	for(Lead ldRecord : lstLeads)
            {
                System.debug('Lead Record is....: '+ ldRecord);
            }
        
        System.debug('-------------------------------------------');
        System.debug('Number of Case Records.......: '+ lstCases.Size());
        	for(Case csRecord : lstCases)
            {
                System.debug('Case Record is.....: '+ csRecord);
            }
        
       	System.debug('---------------------------------------------');
        System.debug('Number of Hiring Manager Records.........: '+ lstHrRecords.Size());
        	for(Hiring_Manager__C hrRecord : lstHRRecords)
            {
                System.debug('Hiring Manager Record.....: '+ hrRecord);
            }
    }
    
    Public static void DynamicSearchRecords(String searchText)
    {
        if(searchText != Null && searchText != '')
        {
            String dynamicSOSL = 'FIND ' +' \' '+searchText+ '*'+' \' ' + ' IN ALL FIELDS RETURNING '+
                                        'Account(Id, Name, Rating, Industry, Annualrevenue, CustomerPriority__C, active__C),'+
                                        'Contact(ID, FirstName, LastName, Email, title, Phone, mailingCity),'+
                                        'Lead(ID, FirstName, LastName, Company, Title, Status, Phone, Email, Fax),' +
                                        'Case(ID, CaseNumber, Status, Priority, Origin, reason, Subject),'+
                                        'Hiring_Manager__C(Id, Name, Location__C, Contact_Number__C, designation__C)';
                                
            List<List<SObject>> lstRecords = Search.Query(dynamicSOSL);
            
            List<Account> lstAccounts = (List<Account>) lstRecords.Get(0);
            List<Contact> lstContacts = (List<Contact>) lstRecords.Get(1);
            List<Lead> lstLeads = (List<Lead>) lstRecords.Get(2);
            List<Case> lstCases = (List<Case>) lstRecords[3];
            List<Hiring_Manager__c> lstHRRecords = (List<Hiring_Manager__C>) lstRecords[4];
            
            System.debug('Number of Account Records....: '+ lstAccounts.Size());
                for(Account accRecord : lstAccounts)
                {
                    System.debug('Account Record.....: '+ accRecord);
                }
            
            System.debug('----------------------------------------');
            System.debug('Number of Contact Records.....: '+ lstContacts.Size());
                for(Contact con : lstContacts)
                {
                    System.debug('Contact Record.....: '+ con);
                }
            
            System.debug('-----------------------------------------');
            System.debug('Number of Lead Records........: '+ lstLeads.Size());
                for(Lead ldRecord : lstLeads)
                {
                    System.debug('Lead Record is....: '+ ldRecord);
                }
            
            System.debug('-------------------------------------------');
            System.debug('Number of Case Records.......: '+ lstCases.Size());
                for(Case csRecord : lstCases)
                {
                    System.debug('Case Record is.....: '+ csRecord);
                }
            
            System.debug('---------------------------------------------');
            System.debug('Number of Hiring Manager Records.........: '+ lstHrRecords.Size());
                for(Hiring_Manager__C hrRecord : lstHRRecords)
                {
                    System.debug('Hiring Manager Record.....: '+ hrRecord);
                }
        }
    }
}

Execution:
----------
	GlobalSearchUtility.SearchRecords();
	
	GlobalSearchUtility.DynamicSearchRecords('test');
	
	GlobalSearchUtility.DynamicSearchRecords('Sample');
	
						
		


